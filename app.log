2024-06-22T07:28:58.069Z error: Fetch single user failed for ID: 66742b1cc56ef0cdc56d01fa, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-06-22T07:31:07.175Z error: Fetch single user failed for ID: 66742b1cc56ef0cdc56d01fa, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-06-23T16:31:49.487Z error: Fetch single user failed for ID: 1, Error: PrismaClientKnownRequestError: 
Invalid `prisma.user.findUnique()` invocation:


Inconsistent column data: Malformed ObjectID: provided hex string representation must be exactly 12 bytes, instead got: "1", length 1.
2024-07-08T09:19:05.962Z error: Fetch single user failed for ID: undefined, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-07-08T09:19:46.376Z error: Fetch single user failed for ID: undefined, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-07-08T13:02:42.564Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:03:00.047Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:03:46.842Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:04:12.191Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:52:40.762Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:55:17.291Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:56:00.781Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:57:16.464Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:59:24.302Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:00:22.722Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:01:00.811Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:03:44.532Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:04:02.977Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:09:34.325Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:12:34.426Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:13:06.941Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:14:39.845Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:17:02.710Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:21:51.984Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:22:52.041Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:24:58.133Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:25:38.293Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:25:48.196Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:26:47.087Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:30:37.047Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:39:04.747Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:39:47.726Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:47:18.374Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:48:26.638Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:51:16.240Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:52:55.698Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:58:23.561Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T15:00:06.760Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T15:00:52.548Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T15:01:17.604Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T15:02:14.634Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T15:55:34.525Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T15:57:00.307Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:01:27.218Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:03:44.248Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:03:57.530Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:04:29.783Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:06:13.580Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:15:55.495Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:16:26.956Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:19:55.707Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T16:24:00.720Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:20:58.377Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:29:37.185Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:40:20.582Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:44:18.070Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:45:42.880Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:46:06.410Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:47:20.153Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:47:38.955Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:47:51.179Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:48:40.993Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:49:04.059Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:49:18.457Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:49:34.542Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:51:14.361Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:52:11.969Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:54:10.200Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:54:59.704Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:56:54.262Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T04:58:54.497Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:07:25.777Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:07:44.988Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:08:34.976Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:08:45.922Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:09:25.466Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:10:17.934Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:10:21.901Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:10:25.041Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:11:02.008Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:11:33.546Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:12:04.535Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:12:33.047Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:12:45.388Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:12:56.115Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:13:48.085Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:13:57.916Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:14:23.186Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:15:22.125Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:17:05.665Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:18:38.977Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:19:22.387Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:19:28.665Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:20:50.591Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:21:19.500Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:21:53.933Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:22:17.801Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:22:31.558Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:22:51.174Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:25:58.826Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:26:18.105Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:26:40.917Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:28:37.904Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:28:42.137Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:29:41.410Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:29:57.713Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:30:15.180Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:31:47.266Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:33:05.882Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:36:11.932Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:36:41.693Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:36:49.373Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:38:16.214Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:39:39.135Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:41:44.565Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:51:14.097Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:51:36.984Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:52:24.998Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:53:29.074Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:53:43.919Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:54:37.195Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:54:59.322Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T05:55:56.596Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:11:19.061Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:13:02.859Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:13:05.805Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:14:17.327Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:14:59.130Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:16:37.315Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:17:32.942Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:19:20.201Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:21:30.046Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:22:50.841Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:25:14.686Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:27:08.333Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:29:11.986Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:30:17.412Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:33:54.305Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:35:00.125Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:35:10.541Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:35:35.553Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:36:31.453Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:37:16.608Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:37:59.261Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:38:22.187Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:39:25.864Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:43:48.391Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:48:12.399Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:48:23.263Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:48:41.144Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:50:09.202Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:50:35.571Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T06:51:37.932Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:00:09.816Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:03:50.741Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:05:06.449Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:06:33.201Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:07:37.694Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:07:53.863Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:09:16.550Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:12:38.199Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:13:53.660Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:18:00.085Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:19:53.415Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:21:25.796Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:24:12.657Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:25:38.246Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:28:24.611Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:29:18.503Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:35:54.472Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:36:06.379Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:36:15.719Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:36:59.562Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:39:44.455Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:41:32.736Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T07:41:49.078Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T08:05:40.091Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-09T08:06:41.968Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T04:03:59.422Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T04:08:55.521Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:50:05.823Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:50:51.114Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:50:51.759Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:55:28.715Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:55:56.391Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:57:39.349Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:58:08.999Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T05:59:17.439Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:02:37.012Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:03:04.949Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:05:47.611Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:06:08.962Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:09:27.969Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:10:29.371Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:11:40.617Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:12:06.696Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:12:32.364Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:14:57.253Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:16:04.718Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:16:44.235Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:17:47.330Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:18:14.681Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:21:34.963Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:22:18.819Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:26:25.658Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:26:33.095Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:26:35.847Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:27:15.260Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:27:20.912Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:27:51.612Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T06:28:18.211Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:12:59.254Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:13:12.162Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:13:12.560Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:14:46.115Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:15:45.610Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:18:47.381Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:22:37.648Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:23:49.268Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:24:39.205Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:24:45.404Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:24:46.652Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:25:58.722Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:26:12.340Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:26:42.124Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:26:44.727Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:26:45.648Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:27:43.606Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:27:44.627Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:28:09.044Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:31:49.258Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:32:57.070Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T07:33:05.557Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T09:21:40.635Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T09:22:33.416Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T09:24:20.992Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T09:26:44.719Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T09:28:25.467Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:14:14.832Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:15:00.961Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:24:30.987Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:27:12.961Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:27:19.934Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:30:31.138Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:31:41.674Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:32:33.197Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:33:41.845Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:35:29.144Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:36:53.762Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:37:06.456Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:37:13.148Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:37:55.506Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:39:11.108Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:39:32.574Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:39:51.048Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:40:09.688Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:40:31.977Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:41:01.385Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:41:33.688Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:41:48.397Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:42:15.086Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:43:53.232Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:44:25.465Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:46:06.086Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:46:38.174Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:47:08.585Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:47:29.245Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:47:42.294Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T10:51:45.066Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T11:10:10.495Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T11:17:58.600Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T11:19:25.308Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T11:19:36.949Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T12:25:28.506Z error: Fetch single user failed for ID: 668e52f17fe442897ca8b59d, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-07-10T13:46:40.962Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-10T14:50:09.967Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:08:15.705Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:09:03.214Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:09:03.497Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:10:13.440Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:10:29.819Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:11:05.143Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:12:20.136Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:12:28.350Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:12:48.466Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:12:54.133Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:13:24.401Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:13:43.555Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:13:46.048Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:14:03.065Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:15:44.405Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:16:22.095Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:16:44.187Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:16:45.628Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:18:17.399Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T04:19:13.396Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:36:15.753Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:39:08.595Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:39:36.131Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:40:36.269Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:44:01.852Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:44:52.540Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:45:30.628Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:46:03.428Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:47:00.836Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:47:53.349Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:49:13.021Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-11T11:50:04.950Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-19T13:00:37.109Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-19T13:02:24.294Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-20T15:52:36.147Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-21T07:39:54.140Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-21T15:27:11.155Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-21T15:27:59.944Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
