2024-06-22T07:28:58.069Z error: Fetch single user failed for ID: 66742b1cc56ef0cdc56d01fa, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-06-22T07:31:07.175Z error: Fetch single user failed for ID: 66742b1cc56ef0cdc56d01fa, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-06-23T16:31:49.487Z error: Fetch single user failed for ID: 1, Error: PrismaClientKnownRequestError: 
Invalid `prisma.user.findUnique()` invocation:


Inconsistent column data: Malformed ObjectID: provided hex string representation must be exactly 12 bytes, instead got: "1", length 1.
2024-07-08T09:19:05.962Z error: Fetch single user failed for ID: undefined, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-07-08T09:19:46.376Z error: Fetch single user failed for ID: undefined, Error: PrismaClientInitializationError: 
Invalid `prisma.user.findUnique()` invocation:


Error in connector: Error creating a database connection. (Kind: An error occurred during DNS resolution: proto error: io error: A socket operation was attempted to an unreachable network. (os error 10051), labels: {})
2024-07-08T13:02:42.564Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:03:00.047Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:03:46.842Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:04:12.191Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:52:40.762Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:55:17.291Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:56:00.781Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:57:16.464Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T13:59:24.302Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:00:22.722Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:01:00.811Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:03:44.532Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
2024-07-08T14:04:02.977Z error: Fetch single user failed for ID: undefined, Error: PrismaClientValidationError: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
    id: undefined,
?   email?: String,
?   AND?: UserWhereInput | UserWhereInput[],
?   OR?: UserWhereInput[],
?   NOT?: UserWhereInput | UserWhereInput[],
?   name?: StringNullableFilter | String | Null,
?   password?: StringNullableFilter | String | Null,
?   isAdmin?: BoolFilter | Boolean,
?   emailVerified?: DateTimeNullableFilter | DateTime | Null,
?   image?: StringNullableFilter | String | Null,
?   gender?: StringNullableFilter | String | Null,
?   address?: StringNullableFilter | String | Null,
?   city?: StringNullableFilter | String | Null,
?   state?: StringNullableFilter | String | Null,
?   phoneNo?: StringNullableFilter | String | Null,
?   postalCode?: StringNullableFilter | String | Null,
?   favorite?: StringNullableListFilter,
?   likes?: StringNullableListFilter,
?   createdAt?: DateTimeFilter | DateTime,
?   updatedAt?: DateTimeFilter | DateTime,
?   accounts?: AccountListRelationFilter,
?   reviews?: ReviewListRelationFilter,
?   Orders?: OrderListRelationFilter
  }
}

Argument `where` of type UserWhereUniqueInput needs at least one of `id` or `email` arguments. Available options are marked with ?.
